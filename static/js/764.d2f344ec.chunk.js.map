{"version":3,"file":"static/js/764.d2f344ec.chunk.js","mappings":"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","sources":["redux/selector.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/filterSlice.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => {\n  return state.contacts.items;\n};\n\nexport const getFilter = state => {\n  return state.filter;\n};\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    console.log(filter);\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name &&\n        typeof contact.name === 'string' &&\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\",\"form__input\":\"ContactForm_form__input__VGD4-\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selector';\nimport { addContact } from '../../redux/operations';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactsList = useSelector(getContacts);\n  const onInputChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    } else if (target.name === 'number') {\n      setNumber(target.value);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isExistName = contactsList.some(\n      contact =>\n        contact.name &&\n        typeof contact.name === 'string' &&\n        contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isExistPhone = contactsList.some(\n      contact =>\n        contact.number &&\n        typeof contact.number === 'string' &&\n        contact.number === number\n    );\n    if (isExistName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (isExistPhone) {\n      alert(`${number} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.container} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        className={css.form__input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        required\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onInputChange}\n      />\n\n      <label htmlFor=\"phone\">Number</label>\n      <input\n        className={css.form__input}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        required\n        value={number}\n        onChange={onInputChange}\n      />\n\n      <button className={css.form__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: { filter: '' },\n  reducers: {\n    onInputChangeAction: (state, action) => {\n      return { ...state, filter: action.payload };\n    },\n  },\n});\n\nexport const { onInputChangeAction } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__label\":\"filter_filter__label__hM98R\",\"form__input\":\"filter_form__input__lPF1M\",\"container\":\"filter_container__8MH92\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/selector';\nimport { onInputChangeAction } from '../../redux/filter/filterSlice';\nimport css from './filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onInputChange = ({ target }) => {\n    dispatch(onInputChangeAction(target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <label>Find contacts by name</label>\n      <input\n        className={css.form__input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onInputChange}\n      ></input>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__delete\":\"ContactList_form__delete__iYOsF\",\"listItem\":\"ContactList_listItem__SptUx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\nimport { selectVisibleContacts } from '../../redux/selector';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  // const contactsList = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n  const handleDelete = contactId => dispatch(deleteContact(contactId));\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n  console.log(visibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <li className={css.listItem} key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            className={css.form__delete}\n            type=\"text\"\n            onClick={() => handleDelete(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/operations';\nimport { getError, getIsLoading } from '../redux/selector';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      {' '}\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h3>Contacts</h3>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","selectVisibleContacts","createSelector","console","log","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","contactsList","useSelector","onInputChange","_ref","target","value","_jsxs","className","css","onSubmit","event","preventDefault","isExistName","some","isExistPhone","alert","concat","addContact","children","_jsx","htmlFor","type","required","pattern","onChange","filterSlice","createSlice","initialState","reducers","onInputChangeAction","action","_objectSpread","payload","actions","reducer","Filter","ContactList","visibleContacts","map","onClick","contactId","id","deleteContact","useEffect","fetchContacts"],"sourceRoot":""}